name: Flutter

on:
  # Runs this action when you push on master
  push:
    branches: [ "main" ]
  # Runs this when a PR against master is created
  pull_request:
    branches: [ "main" ]

jobs:
  flutter_job:

    # The machine, we can also use windows-latest or ubuntu-latest
    # We are choosing macos-latest because we will be also building for iOS
    runs-on: macos-latest

    steps:
      # Clones the project on the machine
      - uses: actions/checkout@v4

      # Installs flutter and related dependency on this machine
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # flutter-version: '3.16.8'
          # ^ If you want to use a specific version of flutter
      
      # Fetches project dependencies from pub
      - name: Install dependencies
        run: flutter pub get

      # Verifies if the dart code is formatted well
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        # --set-exit-if-changed stops execution if the code is not well formatted
        # --output=none prints files that need to be formatted

      # Checks for semantic errors. Can be configured using analysis_options.yaml
      - name: Analyze project source
        run: flutter analyze --fatal-warnings
        # --fatal-warnings stops execution if any warnings are found

      # Runs unit tests
      - name: Run tests
        run: flutter test
